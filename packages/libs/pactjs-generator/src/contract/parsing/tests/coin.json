{
  "module": [
    {
      "name": "coin",
      "governance": "GOVERNANCE",
      "doc": "'coin' represents the Kadena Coin Contract. This contract provides both the \\\n  \\buy/redeem gas support in the form of 'fund-tx', as well as transfer,       \\\n  \\credit, debit, coinbase, account creation and query, as well as SPV burn    \\\n  \\create. To access the coin contract, you may use its fully-qualified name,  \\\n  \\or issue the '(use coin)' command in the body of a module declaration.",
      "usedModule": [
        "TEST-USE",
        "TEST-USE-2"
      ],
      "usedInterface": [
        "fungible-v2",
        "fungible-xchain-v1"
      ],
      "schemas": [
        {
          "name": "coin-schema",
          "doc": "The coin contract token schema",
          "properties": [
            {
              "name": "balance",
              "type": "decimal"
            },
            {
              "name": "guard",
              "type": "guard"
            }
          ]
        },
        {
          "name": "crosschain-schema",
          "doc": "Schema for yielded value in cross-chain transfers",
          "properties": [
            {
              "name": "receiver",
              "type": "string"
            },
            {
              "name": "receiver-guard",
              "type": "guard"
            },
            {
              "name": "amount",
              "type": "decimal"
            },
            {
              "name": "source-chain",
              "type": "string"
            }
          ]
        },
        {
          "name": "allocation-schema",
          "doc": "Genesis allocation registry",
          "properties": [
            {
              "name": "balance",
              "type": "decimal"
            },
            {
              "name": "date",
              "type": "time"
            },
            {
              "name": "guard",
              "type": "guard"
            },
            {
              "name": "redeemed",
              "type": "bool"
            }
          ]
        }
      ],
      "capabilities": [
        {
          "name": "GOVERNANCE"
        },
        {
          "name": "GAS",
          "doc": "Magic capability to protect gas buy and redeem"
        },
        {
          "name": "COINBASE",
          "doc": "Magic capability to protect miner reward"
        },
        {
          "name": "GENESIS",
          "doc": "Magic capability constraining genesis transactions"
        },
        {
          "name": "REMEDIATE",
          "doc": "Magic capability for remediation transactions"
        },
        {
          "name": "DEBIT",
          "parameters": [
            {
              "name": "sender",
              "type": "string"
            }
          ],
          "doc": "Capability for managing debiting operations"
        },
        {
          "name": "CREDIT",
          "parameters": [
            {
              "name": "receiver",
              "type": "string"
            }
          ],
          "doc": "Capability for managing crediting operations"
        },
        {
          "name": "ROTATE",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            }
          ],
          "doc": "Autonomously managed capability for guard rotation",
          "managed": true
        },
        {
          "name": "TRANSFER",
          "returnType": "bool",
          "parameters": [
            {
              "name": "sender",
              "type": "string"
            },
            {
              "name": "receiver",
              "type": "string"
            },
            {
              "name": "amount",
              "type": "decimal"
            }
          ],
          "managed": {
            "property": "amount",
            "manager": "TRANSFER-mgr"
          },
          "composedCapabilities": [
            "DEBIT",
            "CREDIT"
          ]
        },
        {
          "name": "TRANSFER_XCHAIN",
          "returnType": "bool",
          "parameters": [
            {
              "name": "sender",
              "type": "string"
            },
            {
              "name": "receiver",
              "type": "string"
            },
            {
              "name": "amount",
              "type": "decimal"
            },
            {
              "name": "target-chain",
              "type": "string"
            }
          ],
          "managed": {
            "property": "amount",
            "manager": "TRANSFER_XCHAIN-mgr"
          },
          "composedCapabilities": [
            "DEBIT"
          ]
        },
        {
          "name": "TRANSFER_XCHAIN_RECD",
          "returnType": "bool",
          "parameters": [
            {
              "name": "sender",
              "type": "string"
            },
            {
              "name": "receiver",
              "type": "string"
            },
            {
              "name": "amount",
              "type": "decimal"
            },
            {
              "name": "source-chain",
              "type": "string"
            }
          ]
        },
        {
          "name": "RELEASE_ALLOCATION",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            },
            {
              "name": "amount",
              "type": "decimal"
            }
          ],
          "doc": "Event for allocation release, can be used for sig scoping."
        }
      ],
      "functions": [
        {
          "name": "TRANSFER-mgr",
          "returnType": "decimal",
          "parameters": [
            {
              "name": "managed",
              "type": "decimal"
            },
            {
              "name": "requested",
              "type": "decimal"
            }
          ],
          "functionCalls": [
            "TEST-USE.ok",
            "TEST-USE.LAL",
            "TRANSFER_XCHAIN-mgr"
          ]
        },
        {
          "name": "TRANSFER_XCHAIN-mgr",
          "returnType": "decimal",
          "parameters": [
            {
              "name": "managed",
              "type": "decimal"
            },
            {
              "name": "requested",
              "type": "decimal"
            }
          ],
          "functionCalls": []
        },
        {
          "name": "enforce-unit",
          "returnType": "bool",
          "parameters": [
            {
              "name": "amount",
              "type": "decimal"
            }
          ],
          "doc": "Enforce minimum precision allowed for coin transactions",
          "functionCalls": []
        },
        {
          "name": "validate-account",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            }
          ],
          "doc": "Enforce that an account name conforms to the coin contract \\\n         \\minimum and maximum length requirements, as well as the    \\\n         \\latin-1 character set.",
          "functionCalls": []
        },
        {
          "name": "gas-only",
          "doc": "Predicate for gas-only user guards.",
          "functionCalls": []
        },
        {
          "name": "gas-guard",
          "parameters": [
            {
              "name": "guard",
              "type": "guard"
            }
          ],
          "doc": "Predicate for gas + single key user guards",
          "functionCalls": [
            "gas-only"
          ]
        },
        {
          "name": "buy-gas",
          "returnType": "string",
          "parameters": [
            {
              "name": "sender",
              "type": "string"
            },
            {
              "name": "total",
              "type": "decimal"
            }
          ],
          "doc": "This function describes the main 'gas buy' operation. At this point \\\n    \\MINER has been chosen from the pool, and will be validated. The SENDER   \\\n    \\of this transaction has specified a gas limit LIMIT (maximum gas) for    \\\n    \\the transaction, and the price is the spot price of gas at that time.    \\\n    \\The gas buy will be executed prior to executing SENDER's code.",
          "withCapabilities": [
            "DEBIT"
          ],
          "functionCalls": [
            "validate-account",
            "enforce-unit",
            "debit"
          ]
        },
        {
          "name": "redeem-gas",
          "returnType": "string",
          "parameters": [
            {
              "name": "miner",
              "type": "string"
            },
            {
              "name": "miner-guard",
              "type": "guard"
            },
            {
              "name": "sender",
              "type": "string"
            },
            {
              "name": "total",
              "type": "decimal"
            }
          ],
          "doc": "This function describes the main 'redeem gas' operation. At this    \\\n    \\point, the SENDER's transaction has been executed, and the gas that      \\\n    \\was charged has been calculated. MINER will be credited the gas cost,    \\\n    \\and SENDER will receive the remainder up to the limit",
          "withCapabilities": [
            "CREDIT"
          ],
          "functionCalls": [
            "validate-account",
            "enforce-unit",
            "credit"
          ]
        },
        {
          "name": "create-account",
          "returnType": "string",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            },
            {
              "name": "guard",
              "type": "guard"
            }
          ],
          "functionCalls": [
            "validate-account",
            "enforce-reserved"
          ]
        },
        {
          "name": "get-balance",
          "returnType": "decimal",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            }
          ],
          "functionCalls": []
        },
        {
          "name": "details",
          "returnType": {
            "kind": "object",
            "value": "fungible-v2.account-details"
          },
          "parameters": [
            {
              "name": "account",
              "type": "string"
            }
          ],
          "functionCalls": []
        },
        {
          "name": "rotate",
          "returnType": "string",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            },
            {
              "name": "new-guard",
              "type": "guard"
            }
          ],
          "withCapabilities": [
            "ROTATE"
          ],
          "functionCalls": []
        },
        {
          "name": "precision",
          "returnType": "integer",
          "functionCalls": []
        },
        {
          "name": "transfer",
          "returnType": "string",
          "parameters": [
            {
              "name": "sender",
              "type": "string"
            },
            {
              "name": "receiver",
              "type": "string"
            },
            {
              "name": "amount",
              "type": "decimal"
            }
          ],
          "withCapabilities": [
            "TRANSFER"
          ],
          "functionCalls": [
            "validate-account",
            "enforce-unit",
            "debit",
            "credit"
          ]
        },
        {
          "name": "transfer-create",
          "returnType": "string",
          "parameters": [
            {
              "name": "sender",
              "type": "string"
            },
            {
              "name": "receiver",
              "type": "string"
            },
            {
              "name": "receiver-guard",
              "type": "guard"
            },
            {
              "name": "amount",
              "type": "decimal"
            }
          ],
          "withCapabilities": [
            "TRANSFER"
          ],
          "functionCalls": [
            "validate-account",
            "enforce-unit",
            "debit",
            "credit"
          ]
        },
        {
          "name": "coinbase",
          "returnType": "string",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            },
            {
              "name": "account-guard",
              "type": "guard"
            },
            {
              "name": "amount",
              "type": "decimal"
            }
          ],
          "doc": "Internal function for the initial creation of coins.  This function \\\n    \\cannot be used outside of the coin contract.",
          "withCapabilities": [
            "CREDIT"
          ],
          "functionCalls": [
            "validate-account",
            "enforce-unit",
            "credit"
          ]
        },
        {
          "name": "remediate",
          "returnType": "string",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            },
            {
              "name": "amount",
              "type": "decimal"
            }
          ],
          "doc": "Allows for remediation transactions. This function \\\n         \\is protected by the REMEDIATE capability",
          "functionCalls": [
            "validate-account",
            "enforce-unit"
          ]
        },
        {
          "name": "debit",
          "returnType": "string",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            },
            {
              "name": "amount",
              "type": "decimal"
            }
          ],
          "doc": "Debit AMOUNT from ACCOUNT balance",
          "functionCalls": [
            "validate-account",
            "enforce-unit"
          ]
        },
        {
          "name": "credit",
          "returnType": "string",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            },
            {
              "name": "guard",
              "type": "guard"
            },
            {
              "name": "amount",
              "type": "decimal"
            }
          ],
          "doc": "Credit AMOUNT to ACCOUNT balance",
          "functionCalls": [
            "validate-account",
            "enforce-unit",
            "enforce-reserved"
          ]
        },
        {
          "name": "check-reserved",
          "returnType": "string",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            }
          ],
          "doc": " Checks ACCOUNT for reserved name and returns type if \\\n    \\ found or empty string. Reserved names start with a \\\n    \\ single char and colon, e.g. 'c:foo', which would return 'c' as type.",
          "functionCalls": []
        },
        {
          "name": "enforce-reserved",
          "returnType": "bool",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            },
            {
              "name": "guard",
              "type": "guard"
            }
          ],
          "doc": "Enforce reserved account name protocols.",
          "functionCalls": [
            "check-reserved"
          ]
        },
        {
          "name": "create-allocation-account",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            },
            {
              "name": "date",
              "type": "time"
            },
            {
              "name": "keyset-ref",
              "type": "string"
            },
            {
              "name": "amount",
              "type": "decimal"
            }
          ],
          "doc": "Add an entry to the coin allocation table. This function \\\n         \\also creates a corresponding empty coin contract account \\\n         \\of the same name and guard. Requires GENESIS capability. ",
          "functionCalls": [
            "validate-account",
            "enforce-unit",
            "create-account"
          ]
        },
        {
          "name": "release-allocation",
          "parameters": [
            {
              "name": "account",
              "type": "string"
            }
          ],
          "doc": "Release funds associated with allocation ACCOUNT into main ledger.   \\\n         \\ACCOUNT must already exist in main ledger. Allocation is deactivated \\\n         \\after release.",
          "withCapabilities": [
            "RELEASE_ALLOCATION",
            "CREDIT"
          ],
          "functionCalls": [
            "validate-account",
            "credit"
          ]
        }
      ]
    }
  ]
}